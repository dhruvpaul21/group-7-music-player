{
  "version": 3,
  "sources": ["../../flatpickr/dist/esm/plugins/rangePlugin.js"],
  "sourcesContent": ["function rangePlugin(config = {}) {\r\n    return function (fp) {\r\n        let dateFormat = \"\", secondInput, _secondInputFocused, _prevDates;\r\n        const createSecondInput = () => {\r\n            if (config.input) {\r\n                secondInput =\r\n                    config.input instanceof Element\r\n                        ? config.input\r\n                        : window.document.querySelector(config.input);\r\n                if (!secondInput) {\r\n                    fp.config.errorHandler(new Error(\"Invalid input element specified\"));\r\n                    return;\r\n                }\r\n                if (fp.config.wrap) {\r\n                    secondInput = secondInput.querySelector(\"[data-input]\");\r\n                }\r\n            }\r\n            else {\r\n                secondInput = fp._input.cloneNode();\r\n                secondInput.removeAttribute(\"id\");\r\n                secondInput._flatpickr = undefined;\r\n            }\r\n            if (secondInput.value) {\r\n                const parsedDate = fp.parseDate(secondInput.value);\r\n                if (parsedDate)\r\n                    fp.selectedDates.push(parsedDate);\r\n            }\r\n            secondInput.setAttribute(\"data-fp-omit\", \"\");\r\n            if (fp.config.clickOpens) {\r\n                fp._bind(secondInput, [\"focus\", \"click\"], () => {\r\n                    if (fp.selectedDates[1]) {\r\n                        fp.latestSelectedDateObj = fp.selectedDates[1];\r\n                        fp._setHoursFromDate(fp.selectedDates[1]);\r\n                        fp.jumpToDate(fp.selectedDates[1]);\r\n                    }\r\n                    _secondInputFocused = true;\r\n                    fp.isOpen = false;\r\n                    fp.open(undefined, config.position === \"left\" ? fp._input : secondInput);\r\n                });\r\n                fp._bind(fp._input, [\"focus\", \"click\"], (e) => {\r\n                    e.preventDefault();\r\n                    fp.isOpen = false;\r\n                    fp.open();\r\n                });\r\n            }\r\n            if (fp.config.allowInput)\r\n                fp._bind(secondInput, \"keydown\", (e) => {\r\n                    if (e.key === \"Enter\") {\r\n                        fp.setDate([fp.selectedDates[0], secondInput.value], true, dateFormat);\r\n                        secondInput.click();\r\n                    }\r\n                });\r\n            if (!config.input)\r\n                fp._input.parentNode &&\r\n                    fp._input.parentNode.insertBefore(secondInput, fp._input.nextSibling);\r\n        };\r\n        const plugin = {\r\n            onParseConfig() {\r\n                fp.config.mode = \"range\";\r\n                dateFormat = fp.config.altInput\r\n                    ? fp.config.altFormat\r\n                    : fp.config.dateFormat;\r\n            },\r\n            onReady() {\r\n                createSecondInput();\r\n                fp.config.ignoredFocusElements.push(secondInput);\r\n                if (fp.config.allowInput) {\r\n                    fp._input.removeAttribute(\"readonly\");\r\n                    secondInput.removeAttribute(\"readonly\");\r\n                }\r\n                else {\r\n                    secondInput.setAttribute(\"readonly\", \"readonly\");\r\n                }\r\n                fp._bind(fp._input, \"focus\", () => {\r\n                    fp.latestSelectedDateObj = fp.selectedDates[0];\r\n                    fp._setHoursFromDate(fp.selectedDates[0]);\r\n                    _secondInputFocused = false;\r\n                    fp.jumpToDate(fp.selectedDates[0]);\r\n                });\r\n                if (fp.config.allowInput)\r\n                    fp._bind(fp._input, \"keydown\", (e) => {\r\n                        if (e.key === \"Enter\")\r\n                            fp.setDate([fp._input.value, fp.selectedDates[1]], true, dateFormat);\r\n                    });\r\n                fp.setDate(fp.selectedDates, false);\r\n                plugin.onValueUpdate(fp.selectedDates);\r\n                fp.loadedPlugins.push(\"range\");\r\n            },\r\n            onPreCalendarPosition() {\r\n                if (_secondInputFocused) {\r\n                    fp._positionElement = secondInput;\r\n                    setTimeout(() => {\r\n                        fp._positionElement = fp._input;\r\n                    }, 0);\r\n                }\r\n            },\r\n            onChange() {\r\n                if (!fp.selectedDates.length) {\r\n                    setTimeout(() => {\r\n                        if (fp.selectedDates.length)\r\n                            return;\r\n                        secondInput.value = \"\";\r\n                        _prevDates = [];\r\n                    }, 10);\r\n                }\r\n                if (_secondInputFocused) {\r\n                    setTimeout(() => {\r\n                        secondInput.focus();\r\n                    }, 0);\r\n                }\r\n            },\r\n            onDestroy() {\r\n                if (!config.input)\r\n                    secondInput.parentNode &&\r\n                        secondInput.parentNode.removeChild(secondInput);\r\n            },\r\n            onValueUpdate(selDates) {\r\n                if (!secondInput)\r\n                    return;\r\n                _prevDates =\r\n                    !_prevDates || selDates.length >= _prevDates.length\r\n                        ? [...selDates]\r\n                        : _prevDates;\r\n                if (_prevDates.length > selDates.length) {\r\n                    const newSelectedDate = selDates[0];\r\n                    const newDates = _secondInputFocused\r\n                        ? [_prevDates[0], newSelectedDate]\r\n                        : [newSelectedDate, _prevDates[1]];\r\n                    fp.setDate(newDates, false);\r\n                    _prevDates = [...newDates];\r\n                }\r\n                [\r\n                    fp._input.value = \"\",\r\n                    secondInput.value = \"\",\r\n                ] = fp.selectedDates.map((d) => fp.formatDate(d, dateFormat));\r\n            },\r\n        };\r\n        return plugin;\r\n    };\r\n}\r\nexport default rangePlugin;\r\n"],
  "mappings": "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",
  "names": []
}
